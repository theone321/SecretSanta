@model SecretSanta.Models.SecretMatch
@{
    ViewData["Title"] = "GetMatch";
}
<h2>Make Your Secret Santa Match</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateMatch">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.HiddenFor(m => m.Name, "name")
                @Html.HiddenFor(m => m.AllowReroll, "allowReroll")
                <input type="submit" value="Match" class="btn btn-default" />
            </div>
        </form>
        @if (!string.IsNullOrEmpty(Model.TheirSecretMatch)) {
            <div class="alert-info">
                <label>Your match is @Model.TheirSecretMatch.</label>
            </div>
        }
        @if (Model.AllowReroll) {
            // This doesn't seem to work. Probably doing something wrong here because tired.
            // I would just resubmit the form for matching and maybe pass the current match through (or get that another way) so they can't get that match again. Or add it to their blacklist
            @Html.ActionLink("Reroll Result", "RerollResult", "Match", Model)
        }
    </div>
</div>
<br />
<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
