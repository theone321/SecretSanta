@model SecretSanta.Models.EventPageModel
@{
    ViewData["Title"] = Model.Event.EventName;
}
<h2>@Model.Event.EventName</h2>
<h3>Welcome, @Model.Name</h3>
<hr />
<h4>Event Details</h4>
<label asp-for="Event.EventDescription">What: @Model.Event.EventDescription</label>
<br />
<label asp-for="Event.Location">Where: @Model.Event.Location</label>
<br />
<label asp-for="Event.EventDate">When: @Model.Event.EventDate</label>
<hr />
@if (!string.IsNullOrEmpty(Model.TheirSecretMatchName)) {
    <div class="alert-info">
        <label>Your match is @Model.TheirSecretMatchName</label>
    </div>
}

@if (Model.Event.AllowMatching) {
    <form asp-action="CreateMatch">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            @Html.HiddenFor(m => m.UserId, "userId")
            @Html.HiddenFor(m => m.AllowReroll, "allowReroll")
            @if (Model.TheirSecretMatchId <= 0) {
                <input type="submit" value="Match" class="btn btn-default" />
            }
        </div>
    </form>
    @if (Model.TheirSecretMatchId > 0) {
        <form asp-action="RerollResult">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.HiddenFor(m => m.UserId, "userId")
                @Html.HiddenFor(m => m.AllowReroll, "allowReroll")
                @Html.HiddenFor(m => m.TheirSecretMatchId, "theirSecretMatchId")
                @Html.HiddenFor(m => m.TheirSecretMatchName, "theirSecretMatchName")

                @if (Model.AllowReroll) {
                    <input type="submit" value="Re-Match" class="btn btn-default" />
                    <label>You may only do this once!</label>
                }
                else {
                    <input type="submit" value="Re-Match" class="btn btn-default" disabled="disabled" />
                    <label>You have used all of your re-matches.</label>
                }
            </div>
        </form>
    }
}
else {
    <h3>Matching is currently disabled, sorry!</h3>
}

<a asp-controller="Match" asp-action="Index" asp-route-eventId="@Model.EventId">Who's Registered?</a>


@if (Model.TheirSecretMatchId > 0) {
    <div>
        <h4>@Model.TheirSecretMatchName's Interests:</h4>
        <p>@Model.MatchInterests</p>
    </div>
}

<div>
    <h4>What are your interests?</h4>
    <form asp-action="UpdateInterests">
        @Html.HiddenFor(m => m.UserId, "userId")
        @Html.HiddenFor(m => m.Name, "name")
        @Html.HiddenFor(m => m.AllowReroll, "allowReroll")
        @Html.HiddenFor(m => m.TheirSecretMatchId, "theirSecretMatchId")
        @Html.HiddenFor(m => m.TheirSecretMatchName, "theirSecretMatchName")
        <textarea asp-for="Interests" style="width:75%;max-width:700px"></textarea>

        <br />
        <input type="submit" value="Update My Interests" class="btn btn-default" />
    </form>
</div>

<hr />

@if (Model.SignificantOther.UserId <= 0) {
    var others = Model.OtherUsers ?? new List<EventPageModel.LimitedUser>();

    <h4>Set Significant Other</h4>
    <p>You can one-time set a restriction on another person so you will not get them as a match. This cannot be changed later and it cannot be undone and is intended so you will not get your significant other as a match.</p>
    <form asp-action="MakeHardRestriction">
        @Html.HiddenFor(m => m.UserId, "userId")

        <select asp-for="SignificantOther.UserId" asp-items="@{new SelectList(others, "UserId", "UserRealName")} "></select>

        <br />
        <input type="submit" value="Set SO" class="btn btn-default" />
    </form>
}
else {
    <h4>Your Significant Other is listed as: <b>@Model.SignificantOther.UserRealName </b></h4>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
